/* auto-generated by NAPI-RS */
/* eslint-disable */
export declare class Application {
  static tapGlobalAudio(excludedProcesses: Array<Application> | undefined | null, audioStreamCallback: ((err: Error | null, arg: Float32Array) => void)): AudioTapStream
  get processId(): number
  get bundleIdentifier(): string
  get name(): string
  get icon(): Buffer
  get isRunning(): boolean
  tapAudio(audioStreamCallback: ((err: Error | null, arg: Float32Array) => void)): AudioTapStream
}

export declare class ApplicationListChangedSubscriber {
  unsubscribe(): void
}

export declare class ApplicationStateChangedSubscriber {
  unsubscribe(): void
}

export declare class AudioTapStream {
  stop(): void
}

export declare class RecordingPermissions {
  audio: boolean
  screen: boolean
}

export declare class ShareableContent {
  static onApplicationListChanged(callback: ((err: Error | null, ) => void)): ApplicationListChangedSubscriber
  static onAppStateChanged(app: Application, callback: ((err: Error | null, ) => void)): ApplicationStateChangedSubscriber
  constructor()
  applications(): Array<Application>
  applicationWithProcessId(processId: number): Application
  checkRecordingPermissions(): RecordingPermissions
}

export declare function mintChallengeResponse(resource: string, bits?: number | undefined | null): Promise<string>

export declare function verifyChallengeResponse(response: string, bits: number, resource: string): Promise<boolean>
